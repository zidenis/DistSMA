/**
 * This class is generated by jOOQ
 */
package br.unb.sma.database.tables;


import br.unb.sma.database.Keys;
import br.unb.sma.database.Procjud;
import br.unb.sma.database.tables.records.TDenParteFaseProcRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;


/**
 * Denominacao das partes do processo em uma determinada frase. Relaciona 
 * as tabela T_FASE_PROCESSUAL com T_PROCESSO_PARTE de forma a indicar qual 
 * a forma de atuacao da parte na fase processual determinada.
 */
@Generated(
		value = {
				"http://www.jooq.org",
				"jOOQ version:3.7.3"
		},
		comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TDenParteFaseProc extends TableImpl<TDenParteFaseProcRecord> {

	/**
	 * The reference instance of <code>procjud.t_den_parte_fase_proc</code>
	 */
	public static final TDenParteFaseProc T_DEN_PARTE_FASE_PROC = new TDenParteFaseProc();
	private static final long serialVersionUID = 1873896214;
	/**
	 * The column <code>procjud.t_den_parte_fase_proc.cod_processo</code>. Codigo numerico atribuido ao processo para identifica-lo no banco de dados
	 */
	public final TableField<TDenParteFaseProcRecord, Long> COD_PROCESSO = createField("cod_processo", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Codigo numerico atribuido ao processo para identifica-lo no banco de dados");
	/**
	 * The column <code>procjud.t_den_parte_fase_proc.cod_parte</code>. Codigo identificador da parte
	 */
	public final TableField<TDenParteFaseProcRecord, Long> COD_PARTE = createField("cod_parte", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Codigo identificador da parte");
	/**
	 * The column <code>procjud.t_den_parte_fase_proc.dta_inicio_fase</code>. Data de inicio da fase
	 */
	public final TableField<TDenParteFaseProcRecord, Date> DTA_INICIO_FASE = createField("dta_inicio_fase", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "Data de inicio da fase");
	/**
	 * The column <code>procjud.t_den_parte_fase_proc.sig_classe</code>. Sigla identificadora da classe processual para a respectiva fase
	 */
	public final TableField<TDenParteFaseProcRecord, String> SIG_CLASSE = createField("sig_classe", org.jooq.impl.SQLDataType.VARCHAR.length(8).nullable(false), this, "Sigla identificadora da classe processual para a respectiva fase");
	/**
	 * The column <code>procjud.t_den_parte_fase_proc.ind_polo_ativo</code>.
	 */
	public final TableField<TDenParteFaseProcRecord, Boolean> IND_POLO_ATIVO = createField("ind_polo_ativo", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * Create a <code>procjud.t_den_parte_fase_proc</code> table reference
	 */
	public TDenParteFaseProc() {
		this("t_den_parte_fase_proc", null);
	}

	/**
	 * Create an aliased <code>procjud.t_den_parte_fase_proc</code> table reference
	 */
	public TDenParteFaseProc(String alias) {
		this(alias, T_DEN_PARTE_FASE_PROC);
	}

	private TDenParteFaseProc(String alias, Table<TDenParteFaseProcRecord> aliased) {
		this(alias, aliased, null);
	}

	private TDenParteFaseProc(String alias, Table<TDenParteFaseProcRecord> aliased, Field<?>[] parameters) {
		super(alias, Procjud.PROCJUD, aliased, parameters, "Denominacao das partes do processo em uma determinada frase. Relaciona as tabela T_FASE_PROCESSUAL com T_PROCESSO_PARTE de forma a indicar qual a forma de atuacao da parte na fase processual determinada.");
	}

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TDenParteFaseProcRecord> getRecordType() {
		return TDenParteFaseProcRecord.class;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TDenParteFaseProcRecord> getPrimaryKey() {
		return Keys.PK_T_DEN_PARTE_FASE_PROC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TDenParteFaseProcRecord>> getKeys() {
		return Arrays.<UniqueKey<TDenParteFaseProcRecord>>asList(Keys.PK_T_DEN_PARTE_FASE_PROC);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<TDenParteFaseProcRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<TDenParteFaseProcRecord, ?>>asList(Keys.T_DEN_PARTE_FASE_PROC__DEN_PARTE_FASE_PROC_FK1, Keys.T_DEN_PARTE_FASE_PROC__DEN_PARTE_FASE_PROC_FK2);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TDenParteFaseProc as(String alias) {
		return new TDenParteFaseProc(alias, this);
	}

	/**
	 * Rename this table
	 */
	public TDenParteFaseProc rename(String name) {
		return new TDenParteFaseProc(name, null);
	}
}
