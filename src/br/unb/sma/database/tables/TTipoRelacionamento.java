/**
 * This class is generated by jOOQ
 */
package br.unb.sma.database.tables;


import br.unb.sma.database.Keys;
import br.unb.sma.database.Procjud;
import br.unb.sma.database.tables.records.TTipoRelacionamentoRecord;
import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * Ttipos de relacionamento entre dois processos
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.7.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TTipoRelacionamento extends TableImpl<TTipoRelacionamentoRecord> {

    /**
     * The reference instance of <code>procjud.t_tipo_relacionamento</code>
     */
    public static final TTipoRelacionamento T_TIPO_RELACIONAMENTO = new TTipoRelacionamento();
    private static final long serialVersionUID = 1040792540;
    /**
     * The column <code>procjud.t_tipo_relacionamento.cod_tipo_relac</code>. Codigo do tipo de relacionamento
     */
    public final TableField<TTipoRelacionamentoRecord, Byte> COD_TIPO_RELAC = createField("cod_tipo_relac", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "Codigo do tipo de relacionamento");
    /**
     * The column <code>procjud.t_tipo_relacionamento.des_tipo_relac</code>. Descricao do tipo de relacionamento
     */
    public final TableField<TTipoRelacionamentoRecord, String> DES_TIPO_RELAC = createField("des_tipo_relac", org.jooq.impl.SQLDataType.VARCHAR.length(16).nullable(false), this, "Descricao do tipo de relacionamento");

    /**
     * Create a <code>procjud.t_tipo_relacionamento</code> table reference
     */
    public TTipoRelacionamento() {
        this("t_tipo_relacionamento", null);
    }

    /**
     * Create an aliased <code>procjud.t_tipo_relacionamento</code> table reference
     */
    public TTipoRelacionamento(String alias) {
        this(alias, T_TIPO_RELACIONAMENTO);
    }

    private TTipoRelacionamento(String alias, Table<TTipoRelacionamentoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TTipoRelacionamento(String alias, Table<TTipoRelacionamentoRecord> aliased, Field<?>[] parameters) {
        super(alias, Procjud.PROCJUD, aliased, parameters, "Ttipos de relacionamento entre dois processos");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TTipoRelacionamentoRecord> getRecordType() {
        return TTipoRelacionamentoRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TTipoRelacionamentoRecord> getPrimaryKey() {
        return Keys.TIPO_RELACIONAMENTO_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TTipoRelacionamentoRecord>> getKeys() {
        return Arrays.<UniqueKey<TTipoRelacionamentoRecord>>asList(Keys.TIPO_RELACIONAMENTO_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TTipoRelacionamento as(String alias) {
        return new TTipoRelacionamento(alias, this);
    }

    /**
     * Rename this table
     */
    public TTipoRelacionamento rename(String name) {
        return new TTipoRelacionamento(name, null);
    }
}
