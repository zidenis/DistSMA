/**
 * This class is generated by jOOQ
 */
package br.unb.sma.database.tables;


import br.unb.sma.database.Keys;
import br.unb.sma.database.Procjud;
import br.unb.sma.database.tables.records.TFaseProcessualRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;


/**
 * Fases pelas quais passou um processo judicial. Um processo pode passar
 * por varias fases. Para cada fase, pode ser atribuida uma classe processual
 * diferente.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.7.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TFaseProcessual extends TableImpl<TFaseProcessualRecord> {

    /**
     * The reference instance of <code>procjud.t_fase_processual</code>
     */
    public static final TFaseProcessual T_FASE_PROCESSUAL = new TFaseProcessual();
    private static final long serialVersionUID = -6483524;
    /**
     * The column <code>procjud.t_fase_processual.cod_processo</code>. Codigo do processo judicial
     */
    public final TableField<TFaseProcessualRecord, Long> COD_PROCESSO = createField("cod_processo", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Codigo do processo judicial");
    /**
     * The column <code>procjud.t_fase_processual.dta_inicio_fase</code>. Data de inicio da fase
     */
    public final TableField<TFaseProcessualRecord, Date> DTA_INICIO_FASE = createField("dta_inicio_fase", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "Data de inicio da fase");
    /**
     * The column <code>procjud.t_fase_processual.sig_classe</code>. Sigla identificadora da classe processual para a respectiva fase
     */
    public final TableField<TFaseProcessualRecord, String> SIG_CLASSE = createField("sig_classe", org.jooq.impl.SQLDataType.VARCHAR.length(8).nullable(false), this, "Sigla identificadora da classe processual para a respectiva fase");
    /**
     * The column <code>procjud.t_fase_processual.dta_termino_fase</code>. Data de termino da fase do processo
     */
    public final TableField<TFaseProcessualRecord, Date> DTA_TERMINO_FASE = createField("dta_termino_fase", org.jooq.impl.SQLDataType.DATE, this, "Data de termino da fase do processo");
    /**
     * The column <code>procjud.t_fase_processual.cod_magistrado</code>. Codigo Identificador do Magistrado para qual o processo foi distribuido. Valor nulo se o processo nao foi distribuido.
     */
    public final TableField<TFaseProcessualRecord, String> COD_MAGISTRADO = createField("cod_magistrado", org.jooq.impl.SQLDataType.VARCHAR.length(4), this, "Codigo Identificador do Magistrado para qual o processo foi distribuido. Valor nulo se o processo nao foi distribuido.");
    /**
     * The column <code>procjud.t_fase_processual.cod_motivo_redist</code>. Codigo do motivo da redistribuicao. Valor nulo se o processo nao foi redistribuido na fase.
     */
    public final TableField<TFaseProcessualRecord, Byte> COD_MOTIVO_REDIST = createField("cod_motivo_redist", org.jooq.impl.SQLDataType.TINYINT, this, "Codigo do motivo da redistribuicao. Valor nulo se o processo nao foi redistribuido na fase.");
    /**
     * The column <code>procjud.t_fase_processual.sig_oj</code>.
     */
    public final TableField<TFaseProcessualRecord, String> SIG_OJ = createField("sig_oj", org.jooq.impl.SQLDataType.VARCHAR.length(8), this, "");

    /**
     * Create a <code>procjud.t_fase_processual</code> table reference
     */
    public TFaseProcessual() {
        this("t_fase_processual", null);
    }

    /**
     * Create an aliased <code>procjud.t_fase_processual</code> table reference
     */
    public TFaseProcessual(String alias) {
        this(alias, T_FASE_PROCESSUAL);
    }

    private TFaseProcessual(String alias, Table<TFaseProcessualRecord> aliased) {
        this(alias, aliased, null);
    }

    private TFaseProcessual(String alias, Table<TFaseProcessualRecord> aliased, Field<?>[] parameters) {
        super(alias, Procjud.PROCJUD, aliased, parameters, "Fases pelas quais passou um processo judicial. Um processo pode passar por varias fases. Para cada fase, pode ser atribuida uma classe processual diferente.");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TFaseProcessualRecord> getRecordType() {
        return TFaseProcessualRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TFaseProcessualRecord> getPrimaryKey() {
        return Keys.PK_T_FASE_PROCESSUAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TFaseProcessualRecord>> getKeys() {
        return Arrays.<UniqueKey<TFaseProcessualRecord>>asList(Keys.PK_T_FASE_PROCESSUAL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TFaseProcessualRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TFaseProcessualRecord, ?>>asList(Keys.T_FASE_PROCESSUAL__FASE_PROCESSUAL_FK5, Keys.T_FASE_PROCESSUAL__FASE_PROCESSUAL_FK1, Keys.T_FASE_PROCESSUAL__FASE_PROCESSUAL_FK3, Keys.T_FASE_PROCESSUAL__FASE_PROCESSUAL_FK4, Keys.T_FASE_PROCESSUAL__FASE_PROCESSUAL_FK2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFaseProcessual as(String alias) {
        return new TFaseProcessual(alias, this);
    }

    /**
     * Rename this table
     */
    public TFaseProcessual rename(String name) {
        return new TFaseProcessual(name, null);
    }
}
