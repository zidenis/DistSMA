/**
 * This class is generated by jOOQ
 */
package br.unb.sma.database.tables;


import br.unb.sma.database.Keys;
import br.unb.sma.database.Procjud;
import br.unb.sma.database.tables.records.TImpedimentoParteRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Date;
import java.util.Arrays;
import java.util.List;


/**
 * Impedimento de Magistrados em relacao as Partes de processos
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.7.3"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TImpedimentoParte extends TableImpl<TImpedimentoParteRecord> {

    /**
     * The reference instance of <code>procjud.t_impedimento_parte</code>
     */
    public static final TImpedimentoParte T_IMPEDIMENTO_PARTE = new TImpedimentoParte();
    private static final long serialVersionUID = -232132166;
    /**
     * The column <code>procjud.t_impedimento_parte.cod_magistrado</code>. Codigo Identificador do Magistrado
     */
    public final TableField<TImpedimentoParteRecord, String> COD_MAGISTRADO = createField("cod_magistrado", org.jooq.impl.SQLDataType.VARCHAR.length(4).nullable(false), this, "Codigo Identificador do Magistrado");
    /**
     * The column <code>procjud.t_impedimento_parte.cod_parte</code>. Codigo identificador da parte
     */
    public final TableField<TImpedimentoParteRecord, Long> COD_PARTE = createField("cod_parte", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "Codigo identificador da parte");
    /**
     * The column <code>procjud.t_impedimento_parte.dta_registro</code>. Data de registro do impedimento
     */
    public final TableField<TImpedimentoParteRecord, Date> DTA_REGISTRO = createField("dta_registro", org.jooq.impl.SQLDataType.DATE.nullable(false).defaulted(true), this, "Data de registro do impedimento");

    /**
     * Create a <code>procjud.t_impedimento_parte</code> table reference
     */
    public TImpedimentoParte() {
        this("t_impedimento_parte", null);
    }

    /**
     * Create an aliased <code>procjud.t_impedimento_parte</code> table reference
     */
    public TImpedimentoParte(String alias) {
        this(alias, T_IMPEDIMENTO_PARTE);
    }

    private TImpedimentoParte(String alias, Table<TImpedimentoParteRecord> aliased) {
        this(alias, aliased, null);
    }

    private TImpedimentoParte(String alias, Table<TImpedimentoParteRecord> aliased, Field<?>[] parameters) {
        super(alias, Procjud.PROCJUD, aliased, parameters, "Impedimento de Magistrados em relacao as Partes de processos");
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TImpedimentoParteRecord> getRecordType() {
        return TImpedimentoParteRecord.class;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TImpedimentoParteRecord> getPrimaryKey() {
        return Keys.IMPEDIMENTO_PARTE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TImpedimentoParteRecord>> getKeys() {
        return Arrays.<UniqueKey<TImpedimentoParteRecord>>asList(Keys.IMPEDIMENTO_PARTE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TImpedimentoParteRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TImpedimentoParteRecord, ?>>asList(Keys.T_IMPEDIMENTO_PARTE__IMPEDIMENTO_PARTE_FK1, Keys.T_IMPEDIMENTO_PARTE__IMPEDIMENTO_PARTE_FK2);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TImpedimentoParte as(String alias) {
        return new TImpedimentoParte(alias, this);
    }

    /**
     * Rename this table
     */
    public TImpedimentoParte rename(String name) {
        return new TImpedimentoParte(name, null);
    }
}
